[
  {
    "id": "c1111111-1111-1111-1111-111111111111",
    "processing_request_id": "pr111111-1111-1111-1111-111111111111",
    "upload": {
      "id": "u1111111-1111-1111-1111-111111111111",
      "file_name": "Product Planning Research Session",
      "original_name": "Todo App User Research - Feature Discovery Session - 2024-01-15.mp4",
      "content_type": "video/mp4",
      "upload_type": "video",
      "description": "Comprehensive user research session with potential users discussing task management pain points, feature priorities, and workflow preferences",
      "status": "completed",
      "priority": "high",
      "is_checkpoint": true,
      "recorded_on": "2024-01-15T14:00:00Z",
      "summary": "Users desperately need a simple, AI-enhanced todo app that integrates with their existing workflow while providing intelligent task prioritization and deadline management.",
      "participants": [
        "Sarah Chen - Product Manager, Tech Startup",
        "Marcus Johnson - Freelance Designer", 
        "Priya Patel - Graduate Student",
        "David Rodriguez - Small Business Owner",
        "Lisa Wang - Remote Developer",
        "Ahmed Hassan - Marketing Manager"
      ],
      "number_of_participants": 6,
      "artifacts": {
        "generated_files": [
          "user-personas.json",
          "feature-priority-matrix.md",
          "user-journey-map.mmd",
          "pain-points-analysis.xlsx"
        ],
        "recordings": [
          "session-recording-part1.mp4",
          "session-recording-part2.mp4"
        ],
        "transcripts": [
          "focus-group-transcript.txt",
          "key-quotes-compilation.md"
        ]
      }
    },
    "stage_mappings": [
      {
        "stage_id": "step1-stage1",
        "influence_level": "primary",
        "insights_used": [
          "User personas and demographics",
          "Feature prioritization from user feedback",
          "Workflow integration requirements"
        ],
        "artifacts_contributed": [
          "user-personas.json",
          "feature-priority-matrix.md"
        ]
      },
      {
        "stage_id": "step1-stage2", 
        "influence_level": "secondary",
        "insights_used": [
          "UI/UX preferences from user feedback",
          "Mobile vs desktop usage patterns"
        ],
        "artifacts_contributed": [
          "user-journey-map.mmd"
        ]
      }
    ],
    "extracted_insights": [
      {
        "id": "insight-001",
        "type": "user_need",
        "content": "Users want task prioritization that adapts to changing deadlines automatically",
        "confidence": 0.92,
        "source": "Multiple participants emphasized deadline anxiety",
        "stage_relevance": ["step1-stage1", "step5-stage2"],
        "implementation_notes": "Should influence both feature planning and CRUD implementation"
      },
      {
        "id": "insight-002", 
        "type": "technical_requirement",
        "content": "Must sync across devices in real-time, especially mobile-to-desktop",
        "confidence": 0.88,
        "source": "5/6 participants mentioned multi-device usage",
        "stage_relevance": ["step8-stage2", "step8-stage3"],
        "implementation_notes": "Critical for multi-device sync stages"
      },
      {
        "id": "insight-003",
        "type": "feature_priority",
        "content": "Calendar integration is essential, not optional",
        "confidence": 0.95,
        "source": "All participants currently use calendar apps",
        "stage_relevance": ["step7-stage1", "step7-stage3"],
        "implementation_notes": "Move calendar integration earlier in roadmap"
      }
    ],
    "rich_content": {
      "key_quotes": [
        {
          "speaker": "Sarah Chen",
          "quote": "I need my todo app to understand that when my calendar changes, my task priorities should automatically adjust",
          "timestamp": "00:12:34",
          "relevance": "Dynamic prioritization feature"
        },
        {
          "speaker": "Marcus Johnson", 
          "quote": "The app should work seamlessly whether I'm on my phone during commute or at my desktop working",
          "timestamp": "00:18:45",
          "relevance": "Multi-device sync requirements"
        }
      ],
      "user_journey_highlights": [
        {
          "scenario": "Morning planning routine",
          "pain_points": ["Manual reprioritization", "Calendar conflicts"],
          "desired_experience": "AI suggests task reordering based on calendar"
        },
        {
          "scenario": "Urgent deadline changes",
          "pain_points": ["Forgetting to update related tasks", "Missing dependencies"],
          "desired_experience": "Automatic cascading updates to dependent tasks"
        }
      ]
    }
  },
  {
    "id": "c2222222-2222-2222-2222-222222222222", 
    "processing_request_id": "pr222222-2222-2222-2222-222222222222",
    "upload": {
      "id": "u2222222-2222-2222-2222-222222222222",
      "file_name": "Technical Architecture Planning",
      "original_name": "Todo App Technical Architecture - Development Strategy - 2024-01-18.md",
      "content_type": "text/markdown",
      "upload_type": "document",
      "description": "Comprehensive technical architecture document outlining stack decisions, database design, API structure, and development methodology",
      "status": "completed",
      "priority": "high", 
      "is_checkpoint": true,
      "recorded_on": "2024-01-18T10:00:00Z",
      "summary": "Detailed technical foundation for Todo app with Next.js 15, TypeScript, Supabase backend, and AI-enhanced features using modern development practices",
      "artifacts": {
        "generated_files": [
          "database-schema.sql",
          "api-endpoints.md",
          "component-architecture.mmd",
          "tech-stack-comparison.xlsx"
        ],
        "diagrams": [
          "system-architecture-diagram.png",
          "database-erd.png", 
          "api-flow-diagram.png"
        ],
        "code_samples": [
          "prisma-schema-sample.ts",
          "api-route-template.ts",
          "component-structure-example.tsx"
        ]
      }
    },
    "stage_mappings": [
      {
        "stage_id": "step2-stage1",
        "influence_level": "primary",
        "insights_used": [
          "Database schema requirements",
          "Entity relationships design"
        ],
        "artifacts_contributed": [
          "database-schema.sql",
          "database-erd.png"
        ]
      },
      {
        "stage_id": "step2-stage3",
        "influence_level": "primary", 
        "insights_used": [
          "API endpoint specifications",
          "CRUD operation patterns"
        ],
        "artifacts_contributed": [
          "api-endpoints.md",
          "api-route-template.ts"
        ]
      },
      {
        "stage_id": "step3-stage1",
        "influence_level": "secondary",
        "insights_used": [
          "Frontend technology stack",
          "Component architecture patterns"
        ],
        "artifacts_contributed": [
          "component-architecture.mmd"
        ]
      }
    ],
    "extracted_insights": [
      {
        "id": "insight-004",
        "type": "architecture_decision",
        "content": "Supabase provides optimal balance of real-time features and development speed",
        "confidence": 0.89,
        "source": "Technology comparison analysis",
        "stage_relevance": ["step2-stage1", "step8-stage1"],
        "implementation_notes": "Influences both initial schema and sync implementation"
      },
      {
        "id": "insight-005",
        "type": "performance_requirement", 
        "content": "API response times must be under 200ms for good UX",
        "confidence": 0.91,
        "source": "Performance benchmarking analysis",
        "stage_relevance": ["step2-stage4", "step5-stage4"],
        "implementation_notes": "Critical for API validation and state management"
      }
    ]
  },
  {
    "id": "c3333333-3333-3333-3333-333333333333",
    "processing_request_id": "pr333333-3333-3333-3333-333333333333", 
    "upload": {
      "id": "u3333333-3333-3333-3333-333333333333",
      "file_name": "MVP Development Progress Log",
      "original_name": "Todo App MVP - Week 1-2 Development Log - 2024-01-22.md",
      "content_type": "text/markdown",
      "upload_type": "document",
      "description": "Detailed development progress log covering MVP implementation, challenges encountered, solutions implemented, and code quality metrics",
      "status": "completed",
      "priority": "high",
      "is_checkpoint": false,
      "recorded_on": "2024-01-22T15:00:00Z",
      "summary": "Successful MVP implementation with core CRUD functionality, real-time sync, and foundational UI components. Performance targets met with room for optimization.",
      "artifacts": {
        "generated_files": [
          "mvp-codebase-v1.0.zip",
          "test-coverage-report.html",
          "performance-benchmark.json",
          "code-quality-metrics.md"
        ],
        "screenshots": [
          "mvp-dashboard-desktop.png",
          "mvp-mobile-responsive.png",
          "mvp-task-creation-flow.png"
        ],
        "videos": [
          "mvp-demo-walkthrough.mp4",
          "real-time-sync-demo.mp4"
        ]
      }
    },
    "stage_mappings": [
      {
        "stage_id": "step5-stage2",
        "influence_level": "primary",
        "insights_used": [
          "Component implementation patterns",
          "State management decisions"
        ],
        "artifacts_contributed": [
          "mvp-codebase-v1.0.zip",
          "mvp-task-creation-flow.png"
        ]
      },
      {
        "stage_id": "step5-stage4",
        "influence_level": "primary",
        "insights_used": [
          "Performance optimization techniques",
          "State sync patterns"
        ],
        "artifacts_contributed": [
          "performance-benchmark.json"
        ]
      }
    ],
    "extracted_insights": [
      {
        "id": "insight-006",
        "type": "development_learning",
        "content": "Zustand provides better TypeScript support than Redux for this use case",
        "confidence": 0.87,
        "source": "Direct comparison during implementation",
        "stage_relevance": ["step5-stage4"],
        "implementation_notes": "Influences state management architecture decisions"
      }
    ]
  }
]